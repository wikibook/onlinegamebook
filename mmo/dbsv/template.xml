<?xml version="1.0" encoding="utf-8"?>
<!-- This file is generated by dbgen. don't modify yourself! -->
<gen>
  <protocol name="db_proto">
    <config source="dbproto.cpp" header="dbproto.h" debuglog="true" purevirtual="true"/>

	<!-- 必要な定数の定義 -->
	<enum enumname="ResultCode">
	  <num numname="FAIL" numvalue="0" />
	  <num numname="NONE" numvalue="0" />
	  <num numname="SUCCESS" numvalue="1" />
	  <num numname="DUPENTRY" numvalue="2" />
	</enum>
	<define defname="MAXIDSET" value="1000" deftype="int" />
	<enum enumname="SortType" prefix="SORT_" >
	  <num numname="NONE" numvalue="0" />
	  <num numname="BIGGERFIRST" numvalue="1" />
  	  <num numname="SMALLERFIRST" numvalue="2" />
	</enum>	
    <!--ping-->
    <method methname="ping">
      <param prtype="qword" prname="timestamp" />
    </method>

	<!-- id generatorにアクセスする -->
	<method methname="getNewID" prflow="c2s" >
	  <param prtype="dword" prname="num" />
	</method>
	<method methname="getNewIDResult" prflow="s2c" >
	  <param prtype="qword" prname="idarray" prlength="MAXIDSET" prvariable="true" /> <!-- 確保した新しいIDの配列。numに100を指定したら100個返ってくる -->
	</method>
	
{% for t in db.tables %}
    <!-- Table {{ t.name }} -->
	<!-- struct -->
	<struct strctname="{{t.struct_name}}">
	  {% for f in t.fields %}
	  <member mbtype="{{f.type}}" mbname="{{f.name}}" {% if f.size %}mblength="{{f.size}}" mbvariable="true" {% endif %}  />
	  {% endfor %}
	</struct>	  
	
	<!-- put -->
	<method methname="put_{{t.name}}" prflow="c2s" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="{{t.struct_name}}" prname="data" />
    </method>
	<method methname="put_{{t.name}}_result" prflow="s2c" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="ResultCode" prname="result" />
	  <param prtype="{{t.struct_name}}" prname="data" />
	</method>
	
	<!-- get by each field -->
	{% for f in t.fields %}
      {% if f.index or f.primary %}
	<method methname="get_{{t.name}}_by_{{f.name}}" prflow="c2s" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="{{f.type}}" prname="{{f.name}}" {% if f.size %}prlength="{{f.size}}" prvariable="true" {% endif %} />
	</method>
	<method methname="get_{{t.name}}_by_{{f.name}}_result" prflow="s2c" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="ResultCode" prname="result" />	  
	  <param prtype="{{t.struct_name}}" prname="data" prlength="100" prvariable="true" />
    </method>
	<method methname="get_{{t.name}}_ranking_by_{{f.name}}" prflow="c2s" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="SortType" prname="sorttype" />
	  <param prtype="dword" prname="limit" />
	  <param prtype="dword" prname="offset" />	  
	</method>
	<method methname="get_{{t.name}}_ranking_by_{{f.name}}_result" prflow="s2c" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="ResultCode" prname="result" />	  
	  <param prtype="{{t.struct_name}}" prname="data" prlength="100" prvariable="true" />
	</method>
	  {% endif %}<!--  field {{f.name}} -->
	  {% if f.conditional %}
	<method methname="put_{{t.name}}_if_{{f.name}}" prflow="c2s" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="{{t.struct_name}}" prname="data" />
	  <param prtype="{{f.type}}" prname="{{f.name}}_test" />
	</method>	
	<method methname="put_{{t.name}}_if_{{f.name}}_result" prflow="s2c" >
	  <param prtype="dword" prname="sessionID" />
	  <param prtype="ResultCode" prname="result" />	  
	  <param prtype="{{t.struct_name}}" prname="data" />
	</method>		
	
	  {% endif %}
	
	{% endfor %} 
{% endfor %}	
    

  </protocol>
</gen>
